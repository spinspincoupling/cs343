i. 

1 processor:
voteEXT:
@ubuntu1804-002% /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003
2.79u 0.05s 0:02.87r 32956kb

voteINT:
@ubuntu1804-002%  /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003
2.75u 0.05s 0:02.83r 32952kb

voteINTB:
@ubuntu1804-002%  /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003
5.10u 0.05s 0:05.16r 32984kb

voteAUTO:
@ubuntu1804-002% /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003
2.89u 0.06s 0:02.96r 32816kb

voteTASK:
@ubuntu1804-002% /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003
3.23u 0.05s 0:03.28r 33036kb


2 processors:
voteEXT:
@ubuntu1804-002% /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003 2
113.24u 0.23s 0:56.66r 32856kb

voteINT:
@ubuntu1804-002%  /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003 2
116.54u 0.25s 0:58.33r 32952kb

voteINTB:
@ubuntu1804-002%  /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003 2
207.54u 0.49s 1:43.95r 32928kb

voteAUTO:
@ubuntu1804-002% /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003 2
117.35u 0.20s 0:58.75r 32808kb

voteTASK:
@ubuntu1804-002% /usr/bin/time -f "%Uu %Ss %Er %Mkb" ./vote 100 10 10000 1003 2
127.45u 0.25s 1:03.79r 33808kb


ii. State the performance difference (larger/smaller/by how much) among the monitors/task as the kernel
threads increase.
In gerneral, there is a huge increase in runtime as the number of kernel thread increases.
Among differnt implementations, the ordering of runtime before kernal threads increase is 
voteINT < voteEXT < voteAUTO < voteTASK < voteINTB. The ordering after kernel threads increase is
voteEXT < voteINT < voteAUTO < voteTASK < voteINTB. The increase in runtime of voteEXT is the least.
In terms of ratio, voteTASK increases the least and voteINT increases the most.
The other three have similar ratios.
